const WizardScene = require("telegraf/scenes/wizard");
const linkify = require("linkifyjs");
const { Markup } = require("telegraf");
const { Service } = require("../database");
const { default: axios } = require("axios");
const menu = require("../commands/menu");
const escapeHTML = require("escape-html");
const log = require("../helpers/log");

const scene = new WizardScene(
  "sendSmsPhone",
  async (ctx) => {
    try {
      await ctx.scene.reply("üåé –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:", {
        parse_mode: "HTML",
        reply_markup: Markup.inlineKeyboard([
          [
            Markup.callbackButton("üá∑üá¥ –†—É–º—ã–Ω–∏—è", "–†—É–º—ã–Ω–∏—è"),
            Markup.callbackButton("üá∑üá∏ –°–µ—Ä–±–∏—è", "–°–µ—Ä–±–∏—è")
          ],
          [
            Markup.callbackButton("üá¶üá∫ –ê–≤—Å—Ç—Ä–∞–ª–∏—è", "–ê–≤—Å—Ç—Ä–∞–ª–∏—è"),
            Markup.callbackButton("üáÆüáπ –ò—Ç–∞–ª–∏—è", "–ò—Ç–∞–ª–∏—è")
          ],
          [
            Markup.callbackButton("–û—Ç–º–µ–Ω–∏—Ç—å", "cancel")
          ]
        ]),
      });
      ctx.scene.state.data = {};
      return ctx.wizard.next();
    } catch (err) {
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
      return ctx.scene.leave();
    }
  },
  async (ctx) => {
    try {
      // if (!ctx.message.text) return ctx.wizard.prevStep();
      if (!["–†—É–º—ã–Ω–∏—è", "–°–µ—Ä–±–∏—è", "–ê–≤—Å—Ç—Ä–∞–ª–∏—è", "–ò—Ç–∞–ª–∏—è"].includes(ctx.callbackQuery.data)) return ctx.wizard.prevStep();
      if(["–†—É–º—ã–Ω–∏—è"].includes(ctx.callbackQuery.data)) {
        return ctx.replyOrEdit(`üá∑üá¥ –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:`, {
          parse_mode: "HTML",
          reply_markup: Markup.inlineKeyboard([
            [
              Markup.callbackButton("üá∑üá¥ –†—É–º—ã–Ω–∏—è 1.0", "–†—É–º—ã–Ω–∏—è_1"),
              Markup.callbackButton("üá∑üá¥ –†—É–º—ã–Ω–∏—è 2.0", "–†—É–º—ã–Ω–∏—è_2")
            ],
            [
              Markup.callbackButton("–í–æ–∑–≤—Ä–∞—Ç üá∑üá¥ –†—É–º—ã–Ω–∏—è", "–í–æ–∑–≤—Ä–∞—Ç_—Ä—É–º—ã–Ω–∏—è"),
            ],
            [
              Markup.callbackButton("–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 1.0", "–†—É–º—ã–Ω–∏—è_–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å")
            ],
            [
              Markup.callbackButton("–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 2.0", "–†—É–º—ã–Ω–∏—è_–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å2")
            ],
            [
              Markup.callbackButton("Blablacar 1.0", "–†—É–º—ã–Ω–∏—è_–±–±–∫")
            ],
            [
              Markup.callbackButton("Blablacar 2.0", "–†—É–º—ã–Ω–∏—è_–±–±–∫2")
            ],
            [
              Markup.callbackButton("–ü–æ—á—Ç–∞ 1.0", "–†—É–º—ã–Ω–∏—è_–ø–æ—á—Ç–∞")
            ],
            [
              Markup.callbackButton("–û—Ç–º–µ–Ω–∏—Ç—å", "cancel")
            ]
          ]),
        });
      } else if(["–°–µ—Ä–±–∏—è"].includes(ctx.callbackQuery.data)) {
        return ctx.replyOrEdit(`üá∑üá∏ –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:`, {
          parse_mode: "HTML",
          reply_markup: Markup.inlineKeyboard([
            [
              Markup.callbackButton("üá∑üá∏ –°–µ—Ä–±–∏—è 1.0", "–°–µ—Ä–±–∏—è_1"),
              Markup.callbackButton("üá∑üá∏ –°–µ—Ä–±–∏—è 2.0", "–°–µ—Ä–±–∏—è_2")
            ],
            [
              Markup.callbackButton("–í–æ–∑–≤—Ä–∞—Ç üá∑üá∏ –°–µ—Ä–±–∏—è", "–í–æ–∑–≤—Ä–∞—Ç_–°–µ—Ä–±–∏—è"),
            ],
            [
              Markup.callbackButton("–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 1.0", "–°–µ—Ä–±–∏—è_–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å")
            ],
            [
              Markup.callbackButton("–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 2.0", "–°–µ—Ä–±–∏—è_–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å2")
            ],
            [
              Markup.callbackButton("Blablacar 1.0", "–°–µ—Ä–±–∏—è_–±–±–∫")
            ],
            [
              Markup.callbackButton("Blablacar 2.0", "–°–µ—Ä–±–∏—è_–±–±–∫2")
            ],
            [
              Markup.callbackButton("–ü–æ—á—Ç–∞ 1.0", "–°–µ—Ä–±–∏—è_–ø–æ—á—Ç–∞")
            ],
            [
              Markup.callbackButton("–û—Ç–º–µ–Ω–∏—Ç—å", "cancel")
            ]
          ]),
        });
      } else if(["–ê–≤—Å—Ç—Ä–∞–ª–∏—è"].includes(ctx.callbackQuery.data)) {
        return ctx.replyOrEdit(`üá¶üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:`, {
          parse_mode: "HTML",
          reply_markup: Markup.inlineKeyboard([
            [
              Markup.callbackButton("üá¶üá∫ –ê–≤—Å—Ç—Ä–∞–ª–∏—è 1.0", "–ê–≤—Å—Ç—Ä–∞–ª–∏—è_1"),
              Markup.callbackButton("üá¶üá∫ –ê–≤—Å—Ç—Ä–∞–ª–∏—è 2.0", "–ê–≤—Å—Ç—Ä–∞–ª–∏—è_2")
            ],
            [
              Markup.callbackButton("–í–æ–∑–≤—Ä–∞—Ç üá¶üá∫ –ê–≤—Å—Ç—Ä–∞–ª–∏—è", "–í–æ–∑–≤—Ä–∞—Ç_–ê–≤—Å—Ç—Ä–∞–ª–∏—è"),
            ],
            [
              Markup.callbackButton("–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 1.0", "–ê–≤—Å—Ç—Ä–∞–ª–∏—è_–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å")
            ],
            [
              Markup.callbackButton("–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 2.0", "–ê–≤—Å—Ç—Ä–∞–ª–∏—è_–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å2")
            ],
            [
              Markup.callbackButton("Blablacar 1.0", "–ê–≤—Å—Ç—Ä–∞–ª–∏—è_–±–±–∫")
            ],
            [
              Markup.callbackButton("Blablacar 2.0", "–ê–≤—Å—Ç—Ä–∞–ª–∏—è_–±–±–∫2")
            ],
            [
              Markup.callbackButton("–ü–æ—á—Ç–∞ 1.0", "–ê–≤—Å—Ç—Ä–∞–ª–∏—è_–ø–æ—á—Ç–∞")
            ],
            [
              Markup.callbackButton("–û—Ç–º–µ–Ω–∏—Ç—å", "cancel")
            ]
          ]),
        });
      } else if(["–ò—Ç–∞–ª–∏—è"].includes(ctx.callbackQuery.data)) {
        return ctx.replyOrEdit(`üáÆüáπ –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:`, {
          parse_mode: "HTML",
          reply_markup: Markup.inlineKeyboard([
            [
              Markup.callbackButton("üáÆüáπ –ò—Ç–∞–ª–∏—è 1.0", "–ò—Ç–∞–ª–∏—è_1"),
              Markup.callbackButton("üáÆüáπ –ò—Ç–∞–ª–∏—è 2.0", "–ò—Ç–∞–ª–∏—è_2")
            ],
            [
              Markup.callbackButton("–í–æ–∑–≤—Ä–∞—Ç üáÆüáπ –ò—Ç–∞–ª–∏—è", "–í–æ–∑–≤—Ä–∞—Ç_–ò—Ç–∞–ª–∏—è"),
            ],
            [
              Markup.callbackButton("–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 1.0", "–ò—Ç–∞–ª–∏—è_–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å")
            ],
            [
              Markup.callbackButton("–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å 2.0", "–ò—Ç–∞–ª–∏—è_–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å2")
            ],
            [
              Markup.callbackButton("Blablacar 1.0", "–ò—Ç–∞–ª–∏—è_–±–±–∫")
            ],
            [
              Markup.callbackButton("Blablacar 2.0", "–ò—Ç–∞–ª–∏—è_–±–±–∫2")
            ],
            [
              Markup.callbackButton("–ü–æ—á—Ç–∞ 1.0", "–ò—Ç–∞–ª–∏—è_–ø–æ—á—Ç–∞")
            ],
            [
              Markup.callbackButton("–û—Ç–º–µ–Ω–∏—Ç—å", "cancel")
            ]
          ]),
        });
      }
    } catch (err) {
      console.log(err);
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
    }
    return ctx.wizard.next();
  },
  async (ctx) => {
    try {
      if(ctx.callbackQuery.data == "cancel") return ctx.scene.leave()
      if (ctx.message.text) return ctx.wizard.prevStep();
      await ctx.scene.reply("üì≤ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –º–∞–º–æ–Ω—Ç–∞:", {
        reply_markup: Markup.inlineKeyboard([
          [Markup.callbackButton("–û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
        ]),
      });
      ctx.scene.state.data.service = ctx.callbackQuery.data;
      return ctx.wizard.next();
    } catch (err) {
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
      return ctx.scene.leave();
    }
  },
  async (ctx) => {
    try {
      if (!ctx.message.text) return ctx.wizard.prevStep();
      if (ctx.message.text.replace(/\D+/g, "").length < 1)
        return ctx.wizard.prevStep();
      ctx.scene.state.data.number = ctx.message.text.replace(/\D+/g, "");

      return ctx.wizard.nextStep();
    } catch (err) {
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
      return ctx.scene.leave();
    }
  },
  async (ctx) => {
    try {
      await ctx.scene.reply("üîó –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏:", {
        reply_markup: Markup.inlineKeyboard([
          [Markup.callbackButton("–û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
        ]),
      });
      return ctx.wizard.next();
    } catch (err) {
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
      return ctx.scene.leave();
    }
  },
  async (ctx) => {
    try {
      if (!ctx.message.text) return ctx.wizard.prevStep();
      ctx.scene.state.data.link = ctx.message.text

      return ctx.wizard.nextStep();
    } catch (err) {
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
      return ctx.scene.leave();
    }
  },
  async (ctx) => {
    try {
      if (!ctx.message.text) return ctx.wizard.prevStep();
    await ctx.replyOrEdit(`<b>‚ÑπÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:</b>

üì≤ –ù–æ–º–µ—Ä: ${ctx.scene.state.data.number}
üìÅ –°–µ—Ä–≤–∏—Å: ${ctx.scene.state.data.service}
üîó –°—Å—ã–ª–∫–∞: ${ctx.scene.state.data.link}

<i>üìå –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –º–∞–º–æ–Ω—Ç—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.</i>
      `, {
        parse_mode: "HTML",
        reply_markup: Markup.inlineKeyboard([
          [Markup.callbackButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å")],
          [Markup.callbackButton("–û—Ç–º–µ–Ω–∞", "cancel")],
        ]),
      });

      return ctx.wizard.next();
    } catch (err) {
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
      return ctx.scene.leave();
    }
  },
  async (ctx) => {
    try {
      if (ctx.message.text) return ctx.wizard.prevStep();
      if(ctx.callbackQuery.data == 'cancel') {
         return ctx.scene.leave()
      }
      if(ctx.callbackQuery.data == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å') {
       // code
       await ctx.replyOrEdit(`‚úÖ <b>–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–∞–º–æ–Ω—Ç—É.</b>`, {
         parse_mode: "HTML"
       })
      }
    } catch (err) {
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
      return ctx.scene.leave();
    }
  },
);

scene.leave(menu);

module.exports = scene;
